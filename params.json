{"name":"Sobitmap","tagline":"Bitmap decoder, handle resize & quality & compress stuff following user's configurations.","body":"# SoBitmap\r\nSoBitmap is a bitmap decode library for Android. Users can custom the max input memory size,\r\nthe max output bitmap memory size and the picture size in pixel he can accept, then SoBitmap\r\nwill do its best for producing the right bitmap for you. And of course, users have no need to\r\nwarry about the OOM exception, SoBitmap have handled it inside.\r\n\r\n# Feature\r\n\r\n- Support local file and network stream\r\n- Custom option include max input\\output and picture size, and the step of picture's quality, and bitmap compress format(JPG, PNG, WEBP)\r\n- Use okhttp as the httpclient for downloading\r\n- All callback happen in UI thread, no need to warry about it\r\n\r\n# Usage\r\n\r\n### Include in your project\r\n\r\n- Gradle\r\n\r\n```\r\nrepositories {\r\n    maven { url \"https://oss.sonatype.org/content/repositories/snapshots\" }\r\n}\r\n\r\ndependencies {\r\n\tcompile 'com.github.airk000:sobitmap:0.1.+'\r\n}\r\n```\r\n\r\n### Permissions\r\n\r\n```\r\n<uses-permission android:name=\"android.permission.INTERNET\" />\r\n<uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n```\r\n\r\n### Min SDK\r\n\r\nApi-9 (Android2.3)\r\n\r\n### Custom display option\r\n```\r\nOptions options = new Options.Builder()\r\n                .maxOutput(50) // max output in 50KB\r\n                .maxSize(1024) //max picture size in pixel\r\n                .format(Bitmap.CompressFormat.PNG)\r\n                .build();\r\nSoBitmap.getInstance(this).setDefaultOption(options);\r\n```\r\n\r\n>The default option:\r\n\r\n- MAX input 5MB\r\n- MAX output 300KB\r\n- STEP 15\r\n- SIZE max screen size * 2\r\n- Compress format JPEG\r\n\r\n\r\n### Hunting bitmap\r\n\r\n```\r\nSoBitmap.getInstance(this).hunt(uri, new Callback() {\r\n            @Override\r\n            public void onHunted(Bitmap bitmap, BitmapFactory.Options options) {\r\n                imageView.setImageBitmap(bitmap);\r\n            }\r\n\r\n            @Override\r\n            public void onException(HuntException e) {\r\n                textView.setText(e.toString());\r\n            }\r\n        });\r\n```\r\n\r\n# *TODO List*:\r\n\r\n- MediaStore support\r\n- Multi thread speed up the decoding duration\r\n\r\n# License\r\n\r\n```\r\nCopyright 2015 Kevin Liu\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}